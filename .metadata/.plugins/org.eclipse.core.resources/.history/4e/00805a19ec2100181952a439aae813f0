package com.shop.sso.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.yaoyao.common.pojo.ShopResult;
import com.yaoyao.common.utils.CookieUtils;
import com.yaoyao.pojo.TbUser;
import com.yaoyao.sso.service.UserService;

@RestController
public class userController {

	@Resource
	private UserService userService;
	
	@Value("${TOKEN_KEY}")  
    private String TOKEN_KEY; 

	@RequestMapping("/user/check/{param}/{type}")
	@ResponseBody
	public ShopResult checkUserData(@PathVariable String param, @PathVariable Integer type) {
		ShopResult result = userService.checkUserData(param, type);
		return result;
	}
	
    @PostMapping(value = "/user/register")  
    @ResponseBody  
    public ShopResult register(TbUser tbUser){  
    	ShopResult register = userService.register(tbUser);  
     return register;  
    }  
    
    @PostMapping(value = "/user/login")  
    @ResponseBody  
    public ShopResult login(String username,String password,  
            HttpServletRequest request,HttpServletResponse response){  
    	ShopResult result = userService.login(username, password);  
        //把token写入到cookie  
        CookieUtils.setCookie(request, response, TOKEN_KEY, result.getData().toString());  
        return result;  
    }  
    
    @GetMapping(value = "/user/token/{token}")  
    @ResponseBody  
    public ShopResult getUserByToken(@PathVariable String token){  
    	ShopResult result = userService.getUserByToken(token);  
        return result;  
    }  
    
    @GetMapping(value = "/user/logout/{token}")  
    @ResponseBody  
    public ShopResult logout(@PathVariable String token){  
    	ShopResult result = userService.logout(token);  
        return result;  
    }  

}
